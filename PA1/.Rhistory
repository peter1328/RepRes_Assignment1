library(eRm)
##Infit
##Rasch
ifmat_rasch <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 100 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.rasch(ss, is)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_rasch <- rbind(ifmat_rasch, fs$i.infitMSQ)
ifmat_rasch$Infit_0713[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.7)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.3))
ifmat_rasch$Infit_0812[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.8)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.2))
ifmat_rasch$Infit_085115[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.85)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.15))
ifmat_rasch$ss[nrow(ifmat_rasch)] <- ss
ifmat_rasch$is[nrow(ifmat_rasch)] <- is
}
}
}
View(ifmat_rasch)
[ncol(ifmat_rasch[nrow])]
ncol(ifmat_rasch[nrow])
ncol(ifmat_rasch[nrow,])
ncol(ifmat_rasch)
ncol(ifmat_rasch[nrow])
ncol(ifmat_rasch[nrow(ifmat_rasch)])
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-2,]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-2,]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-1,-1]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[,-1]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
View(ifmat_rasch)
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
View(ifmat_rasch)
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-4,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
library(eRm)
##Infit
##Rasch
ifmat_rasch <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.rasch(ss, is)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_rasch <- rbind(ifmat_rasch, fs$i.infitMSQ)
ifmat_rasch$Infit_0713[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.7)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.3))
ifmat_rasch$Infit_0812[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.8)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.2))
ifmat_rasch$Infit_085115[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.85)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.15))
ifmat_rasch$ss[nrow(ifmat_rasch)] <- ss
ifmat_rasch$is[nrow(ifmat_rasch)] <- is
ifmat_rasch$ni[nrow(ifmat_rasch)] <- ncol(ifmat_rasch[nrow(ifmat_rasch),])
}
}
}
ifmat_rasch <- ifmat_rasch[-1,]
summary(ifmat_rasch_Infit_0713)
summary(ifmat_rasch_Infit_0812)
summary(ifmat_rasch_Infit_085115)
write.table(ifmat_rasch, "C:/Users/petere/Desktop/ifmat_rasch_1000_3crit.txt", sep="\t")
##2pl
ifmat_2pl <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.30)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl <- rbind(ifmat_2pl, fs$i.infitMSQ)
ifmat_2pl$Infit_0713[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.7)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.3))
ifmat_2pl$Infit_0812[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.8)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.2))
ifmat_2pl$Infit_085115[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.85)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.15))
ifmat_2pl$ss[nrow(ifmat_2pl)] <- ss
ifmat_2pl$is[nrow(ifmat_2pl)] <- is
ifmat_2pl$ni[nrow(ifmat_2pl)] <- ncol(ifmat_2pl[nrow(ifmat_2pl),])
}
}
}
ifmat_2pl <- ifmat_2pl[-1,]
summary(ifmat_2pl_Infit_0713)
summary(ifmat_2pl_Infit_0812)
summary(ifmat_2pl_Infit_085115)
write.table(ifmat_2pl, "C:/Users/petere/Desktop/ifmat_2pl_1000_3crit.txt", sep="\t")
##LD
ifmat_ld <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.1)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld <- rbind(ifmat_ld, fs$i.infitMSQ)
ifmat_ld$Infit_0713[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.7)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.3))
ifmat_ld$Infit_0812[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.8)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.2))
ifmat_ld$Infit_085115[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.85)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.15))
ifmat_ld$Infit_085115[ncol(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.85)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.15))
ifmat_ld$ss[nrow(ifmat_ld)] <- ss
ifmat_ld$is[nrow(ifmat_ld)] <- is
ifmat_ld$ni[nrow(ifmat_ld)] <- ncol(ifmat_ld[nrow(ifmat_ld),])
}
}
}
ifmat_ld <- ifmat_ld[-1,]
summary(ifmat_ld$Infit_0713)
summary(ifmat_ld$Infit_0812)
summary(ifmat_ld$Infit_085115)
write.table(ifmat_ld, "C:/Users/petere/Desktop/ifmat_ld_1000_3crit.txt", sep="\t")
summary(ifmat_rasch_Infit_0713)
summary(ifmat_rasch$Infit_085115)
##2pld50
ifmat_2pl_d50 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.50)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d50 <- rbind(ifmat_2pl_d50, fs$i.infitMSQ)
ifmat_2pl_d50$Infit_0713[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.7)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.3))
ifmat_2pl_d50$Infit_0812[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.8)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.2))
ifmat_2pl_d50$Infit_085115[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.85)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.15))
ifmat_2pl_d50$ss[nrow(ifmat_2pl_d50)] <- ss
ifmat_2pl_d50$is[nrow(ifmat_2pl_d50)] <- is
ifmat_2pl_d50$ni[nrow(ifmat_2pl_d50)] <- ncol(ifmat_2pl_d50[nrow(ifmat_2pl_d50),])
}
}
}
ifmat_2pl_d50 <- ifmat_2pl_d50[-1,]
summary(ifmat_2pl_d50$Infit_0713)
summary(ifmat_2pl_d50$Infit_0812)
summary(ifmat_2pl_d50$Infit_085115)
write.table(ifmat_2pl_d50, "C:/Users/petere/Desktop/ifmat_2pl_d50_1000_3crit.txt", sep="\t")
##LD_co03
ifmat_ld_co03 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.3)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co03 <- rbind(ifmat_ld_co03, fs$i.infitMSQ)
ifmat_ld_co03$Infit_0713[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.7)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.3))
ifmat_ld_co03$Infit_0812[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.8)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.2))
ifmat_ld_co03$Infit_085115[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.85)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.15))
ifmat_ld_co03$Infit_085115[ncol(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.85)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.15))
ifmat_ld_co03$ss[nrow(ifmat_ld_co03)] <- ss
ifmat_ld_co03$is[nrow(ifmat_ld_co03)] <- is
ifmat_ld_co03$ni[nrow(ifmat_ld_co03)] <- ncol(ifmat_ld_co03[nrow(ifmat_ld_co03),])
}
}
}
ifmat_ld_co03 <- ifmat_ld_co03[-1,]
summary(ifmat_ld_co03$Infit_0713)
summary(ifmat_ld_co03$Infit_0812)
summary(ifmat_ld_co03$Infit_085115)
write.table(ifmat_ld_co03, "C:/Users/petere/Desktop/ifmat_ld_co03_1000_3crit.txt", sep="\t")
##2pld70
ifmat_2pl_d70 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.70)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d70 <- rbind(ifmat_2pl_d70, fs$i.infitMSQ)
ifmat_2pl_d70$Infit_0713[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.7)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.3))
ifmat_2pl_d70$Infit_0812[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.8)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.2))
ifmat_2pl_d70$Infit_085115[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.85)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.15))
ifmat_2pl_d70$ss[nrow(ifmat_2pl_d70)] <- ss
ifmat_2pl_d70$is[nrow(ifmat_2pl_d70)] <- is
ifmat_2pl_d70$ni[nrow(ifmat_2pl_d70)] <- ncol(ifmat_2pl_d70[nrow(ifmat_2pl_d70),])
}
}
}
ifmat_2pl_d70 <- ifmat_2pl_d70[-1,]
summary(ifmat_2pl_d70$Infit_0713)
summary(ifmat_2pl_d70$Infit_0812)
summary(ifmat_2pl_d70$Infit_085115)
write.table(ifmat_2pl_d70, "C:/Users/petere/Desktop/ifmat_2pl_d70_1000_3crit.txt", sep="\t")
##LD_co05
ifmat_ld_co05 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.5)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co05 <- rbind(ifmat_ld_co05, fs$i.infitMSQ)
ifmat_ld_co05$Infit_0713[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.7)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.3))
ifmat_ld_co05$Infit_0812[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.8)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.2))
ifmat_ld_co05$Infit_085115[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.85)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.15))
ifmat_ld_co05$ss[nrow(ifmat_ld_co05)] <- ss
ifmat_ld_co05$is[nrow(ifmat_ld_co05)] <- is
ifmat_ld_co05ni[nrow(ifmat_ld_co05)] <- ncol(ifmat_ld_co05[nrow(ifmat_ld_co05),])
}
}
}
ifmat_ld_co05 <- ifmat_ld_co05[-1,]
summary(ifmat_ld_co05$Infit_0713)
summary(ifmat_ld_co05$Infit_0812)
summary(ifmat_ld_co05$Infit_085115)
write.table(ifmat_ld_co05, "C:/Users/petere/Desktop/ifmat_ld_co05_1000_3crit.txt", sep="\t")
##2pld70
ifmat_2pl_d70 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.70)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d70 <- rbind(ifmat_2pl_d70, fs$i.infitMSQ)
ifmat_2pl_d70$Infit_0713[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.7)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.3))
ifmat_2pl_d70$Infit_0812[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.8)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.2))
ifmat_2pl_d70$Infit_085115[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.85)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.15))
ifmat_2pl_d70$ss[nrow(ifmat_2pl_d70)] <- ss
ifmat_2pl_d70$is[nrow(ifmat_2pl_d70)] <- is
ifmat_2pl_d70$ni[nrow(ifmat_2pl_d70)] <- ncol(ifmat_2pl_d70[nrow(ifmat_2pl_d70),])
}
}
}
ifmat_2pl_d70 <- ifmat_2pl_d70[-1,]
summary(ifmat_2pl_d70$Infit_0713)
summary(ifmat_2pl_d70$Infit_0812)
summary(ifmat_2pl_d70$Infit_085115)
write.table(ifmat_2pl_d70, "C:/Users/petere/Desktop/ifmat_2pl_d70_1000_3crit.txt", sep="\t")
##LD_co05
ifmat_ld_co05 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.5)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co05 <- rbind(ifmat_ld_co05, fs$i.infitMSQ)
ifmat_ld_co05$Infit_0713[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.7)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.3))
ifmat_ld_co05$Infit_0812[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.8)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.2))
ifmat_ld_co05$Infit_085115[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.85)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.15))
ifmat_ld_co05$ss[nrow(ifmat_ld_co05)] <- ss
ifmat_ld_co05$is[nrow(ifmat_ld_co05)] <- is
ifmat_ld_co05$ni[nrow(ifmat_ld_co05)] <- ncol(ifmat_ld_co05[nrow(ifmat_ld_co05),])
}
}
}
ifmat_ld_co05 <- ifmat_ld_co05[-1,]
summary(ifmat_ld_co05$Infit_0713)
summary(ifmat_ld_co05$Infit_0812)
summary(ifmat_ld_co05$Infit_085115)
write.table(ifmat_ld_co05, "C:/Users/petere/Desktop/ifmat_ld_co05_1000_3crit.txt", sep="\t")
setwd("C:/Users/petere/Documents/3III_Misc/Stud/Reproducible research/")
setwd("C:/Users/petere/Documents/3III_Misc/Stud/Reproducible research/")
stepsinterval <- aggregate(x=steps, by=list(interval), FUN="mean", na.rm=TRUE)
stepsinterval <- aggregate(x=steps, by=list(interval), FUN="mean", na.rm=TRUE)
names(stepsinterval)[1] <- "interval"
stepsinterval <- aggregate(x=steps, by=list(interval), FUN="mean", na.rm=TRUE)
ass1data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
#Extract mean steps per day
stepsday <- aggregate(x=ass1data$steps, by=list(date), FUN="sum")
ass1data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
setwd("C:/Users/petere/Documents/4IV_Stud/Reproducible research/PA1")
ass1data <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
str(ass1data)
attach(ass1data)
stepsday <- aggregate(x=ass1data$steps, by=list(date), FUN="sum")
str(stepsday)
names(stepsday)[1] <- "day"
names(stepsday)[2] <- "meanSteps"
#Histogram of imputed dataset mean steps per day
hist(stepsday$meanSteps)
#Report mean number of steps taken each day
mean(stepsday$meanSteps, na.rm=TRUE)
#Report median number of steps taken each day
median(stepsday$meanSteps, na.rm=TRUE)
stepsinterval <- aggregate(x=steps, by=list(interval), FUN="mean", na.rm=TRUE)
names(stepsinterval)[1] <- "interval"
names(stepsinterval)[2] <- "meanSteps"
str(stepsinterval)
#Plot average number of steps taken per interval in time series plot
stepstimeseries <- ggplot(stepsinterval, aes(x=interval, y=meanSteps)) +
theme_pety() +
theme(legend.position="none") +
geom_point() +
geom_line() +
labs(title = "Time series plot of the intervals", x = "Interval", y = "Average number of steps taken")
stepstimeseries
stepstimeseries <- ggplot(stepsinterval, aes(x=interval, y=meanSteps)) +
theme_pety() +
theme(legend.position="none") +
geom_point() +
geom_line() +
labs(title = "Time series plot of the intervals", x = "Interval", y = "Average number of steps taken")
library(stats)
library(ggplot2)
stepstimeseries <- ggplot(stepsinterval, aes(x=interval, y=meanSteps)) +
theme_pety() +
theme(legend.position="none") +
geom_point() +
geom_line() +
labs(title = "Time series plot of the intervals", x = "Interval", y = "Average number of steps taken")
theme_pety <- function(base_size = 12, base_family = "") {
theme(text = element_text(size=20), #Larger text font size
panel.background = element_rect(fill = 'white', colour = 'black'), #Figure background colour
panel.grid.major=element_blank(), #Remove major grid
panel.grid.minor=element_blank(), #Remove minor grid
axis.text.x = element_text(colour="black"), #x-Axis text colour
axis.text.y = element_text(colour="black")) #y-Axis text colour
}
stepstimeseries <- ggplot(stepsinterval, aes(x=interval, y=meanSteps)) +
theme_pety() +
theme(legend.position="none") +
geom_point() +
geom_line() +
labs(title = "Time series plot of the intervals", x = "Interval", y = "Average number of steps taken")
stepstimeseries
stepstimeseries
#Plot average number of steps taken per interval in time series plot
stepstimeseries <- ggplot(stepsinterval, aes(x=interval, y=meanSteps)) +
theme_pety() +
theme(legend.position="none") +
geom_point() +
geom_line(aes(x=interval, y=meanSteps)) +
labs(title = "Time series plot of the intervals", x = "Interval", y = "Average number of steps taken")
stepstimeseries
#Report mean number of steps taken each day
mean(stepsday$meanSteps, na.rm=TRUE)
#Report median number of steps taken each day
median(stepsday$meanSteps, na.rm=TRUE)
#Extract interval with maximum number of steps
stepsinterval$interval[which.max(stepsinterval$meanSteps)]
ass1data_imp <- ass1data
str(ass1data_imp)
for (i in 1:nrow(ass1data_imp)) {
if (is.na(ass1data_imp$steps[i])) {
ass1data_imp$steps[i] <- stepsinterval[which(ass1data_imp$interval[i] == stepsinterval$interval), ]$meanSteps
}
}
head(ass1data_imp)
sum(is.na(ass1data_imp))
#Create new dataset with imputed mean steps per day
stepsday_imp <- aggregate(x=ass1data_imp$steps, by=list(date), FUN="sum")
str(stepsday_imp)
names(stepsday_imp)[1] <- "day"
names(stepsday_imp)[2] <- "meanSteps"
#Histogram of imputed dataset mean steps per day
hist(stepsday_imp$meanSteps)
#Report mean number of steps taken each day
mean(stepsday_imp$meanSteps)
#Report median number of steps taken each day
median(stepsday_imp$meanSteps)
#Differences between old and new (imputed) means and medians
mean(stepsday_imp$meanSteps)-mean(stepsday$meanSteps, na.rm=TRUE)
median(stepsday_imp$meanSteps)-median(stepsday$meanSteps, na.rm=TRUE)
#Add variable indicating weekday to dataset
ass1data_imp$weekdays <- factor(format(ass1data_imp$date, "%A"))
levels(ass1data_imp$weekdays)
levels(ass1data_imp$weekdays) <- list(weekday = c("Montag", "Dienstag",
"Mittwoch", "Donnerstag", "Freitag"),
weekend = c("Samstag", "Sonntag"))
levels(ass1data_imp$weekdays)
table(ass1data_imp$weekdays)
#Aggregate number of steps taken on weekdays and weekenddays
mSteps <- aggregate(ass1data_imp$steps,
list(interval = as.numeric(as.character(ass1data_imp$interval)),
weekdays = ass1data_imp$weekdays),
FUN = "mean")
names(mSteps)[3] <- "meanSteps"
#Plot number of steps taken on weekdays and weekenddays
library(lattice)
xyplot(mSteps$meanSteps ~ mSteps$interval | mSteps$weekdays,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
```
#Histogram of imputed dataset mean steps per day
hist(stepsday_imp$meanSteps)
xyplot(stepsinterval$meanSteps ~ stepsinterval$interval, type = "l",
xlab = "Interval", ylab = "Number of steps")
#Histogram of imputed dataset mean steps per day
hist(stepsday$meanSteps)
sum(stepsday_imp$meanSteps)
sum(stepsday_imp$meanSteps)-sum(stepsday$meanSteps)
sum(stepsday$meanSteps)
sum(stepsday_imp$meanSteps)-sum(stepsday$meanSteps, na.rm=TRUE)
#Impact on total daily number of steps: How many percent does total number increase?
1-(sum(stepsday_imp$meanSteps)/sum(stepsday$meanSteps, na.rm=TRUE))
sum(stepsday_imp$meanSteps)/sum(stepsday$meanSteps, na.rm=TRUE)
1-(sum(stepsday$meanSteps, na.rm=TRUE)/sum(stepsday_imp$meanSteps))
sum(is.na(ass1data))
source('~/.active-rstudio-document', echo=TRUE)
activity <- download.file(https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip, destfile, method, quiet = FALSE, mode = "w",
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile, method, quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method=auto, quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", auto, quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method="auto"", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method="auto"", quiet = FALSE, mode = "w",
activity <- download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "activity.zip", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
activity
unz("activity.zip")
unz(filename="activity.zip")
data <- read.table(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
data <- read.table(unz("activity.zip", activity), header=T, quote="\"", sep=",")
